{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Random/react/Kanban-Board/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport List from \"./componets/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([[\"foo\", \"bar\"], [\"foo\", \"bar\"], [\"foo\", \"bar\"], [\"foo\", \"bar\"]]);\n  console.log(users);\n\n  const moveToNext = async (index, usersIndex) => {\n    const user = users;\n    user[usersIndex + 1].push(user[usersIndex][index]);\n    user[usersIndex].splice(index, 1);\n    setUsers(user);\n  };\n\n  useEffect(() => {\n    console.log(\"updated\");\n  }, [users]);\n\n  const moveToPrev = (index, usersIndex) => {\n    const user = users;\n    user[usersIndex - 1].push(user[usersIndex][index]);\n    user[usersIndex].splice(index, 1);\n  };\n\n  const addItem = usersIndex => {\n    const users = this.state.users;\n    const add = prompt(\"\", \"\");\n\n    if (add === null) {\n      return;\n    }\n\n    users[usersIndex].push(add);\n    this.setState({\n      users\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        blocktext: users,\n        moveToNext: moveToNext,\n        moveToPrev: moveToPrev,\n        addItem: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"cQFIvjcl3FU8JF7Og+Qza1b1oQQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/owen/Random/react/Kanban-Board/src/App.jsx"],"names":["React","useState","useEffect","List","App","users","setUsers","console","log","moveToNext","index","usersIndex","user","push","splice","moveToPrev","addItem","state","add","prompt","setState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC,CAAC,KAAD,EAAQ,KAAR,CADiC,EAEjC,CAAC,KAAD,EAAQ,KAAR,CAFiC,EAGjC,CAAC,KAAD,EAAQ,KAAR,CAHiC,EAIjC,CAAC,KAAD,EAAQ,KAAR,CAJiC,CAAD,CAAlC;AAOAM,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;;AAEA,QAAMI,UAAU,GAAG,OAAOC,KAAP,EAAcC,UAAd,KAA6B;AAC9C,UAAMC,IAAI,GAAGP,KAAb;AACAO,IAAAA,IAAI,CAACD,UAAU,GAAG,CAAd,CAAJ,CAAqBE,IAArB,CAA0BD,IAAI,CAACD,UAAD,CAAJ,CAAiBD,KAAjB,CAA1B;AACAE,IAAAA,IAAI,CAACD,UAAD,CAAJ,CAAiBG,MAAjB,CAAwBJ,KAAxB,EAA+B,CAA/B;AACAJ,IAAAA,QAAQ,CAACM,IAAD,CAAR;AACD,GALD;;AAOAV,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,GAFQ,EAEN,CAACH,KAAD,CAFM,CAAT;;AAIA,QAAMU,UAAU,GAAG,CAACL,KAAD,EAAQC,UAAR,KAAuB;AACxC,UAAMC,IAAI,GAAGP,KAAb;AACAO,IAAAA,IAAI,CAACD,UAAU,GAAG,CAAd,CAAJ,CAAqBE,IAArB,CAA0BD,IAAI,CAACD,UAAD,CAAJ,CAAiBD,KAAjB,CAA1B;AACAE,IAAAA,IAAI,CAACD,UAAD,CAAJ,CAAiBG,MAAjB,CAAwBJ,KAAxB,EAA+B,CAA/B;AACD,GAJD;;AAMA,QAAMM,OAAO,GAAIL,UAAD,IAAgB;AAC9B,UAAMN,KAAK,GAAG,KAAKY,KAAL,CAAWZ,KAAzB;AACA,UAAMa,GAAG,GAAGC,MAAM,CAAC,EAAD,EAAK,EAAL,CAAlB;;AACA,QAAID,GAAG,KAAK,IAAZ,EAAkB;AAChB;AACD;;AACDb,IAAAA,KAAK,CAACM,UAAD,CAAL,CAAkBE,IAAlB,CAAuBK,GAAvB;AACA,SAAKE,QAAL,CAAc;AACZf,MAAAA;AADY,KAAd;AAGD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,SAAS,EAAEA,KADb;AAEE,QAAA,UAAU,EAAEI,UAFd;AAGE,QAAA,UAAU,EAAEM,UAHd;AAIE,QAAA,OAAO,EAAEC;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAnDD;;GAAMZ,G;;KAAAA,G;AAqDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport List from \"./componets/List\";\n\nconst App = () => {\n  const [users, setUsers] = useState([\n    [\"foo\", \"bar\"],\n    [\"foo\", \"bar\"],\n    [\"foo\", \"bar\"],\n    [\"foo\", \"bar\"],\n  ]);\n\n  console.log(users);\n\n  const moveToNext = async (index, usersIndex) => {\n    const user = users;\n    user[usersIndex + 1].push(user[usersIndex][index]);\n    user[usersIndex].splice(index, 1);\n    setUsers(user);\n  };\n\n  useEffect(() => {\n    console.log(\"updated\");\n  }, [users]);\n\n  const moveToPrev = (index, usersIndex) => {\n    const user = users;\n    user[usersIndex - 1].push(user[usersIndex][index]);\n    user[usersIndex].splice(index, 1);\n  };\n\n  const addItem = (usersIndex) => {\n    const users = this.state.users;\n    const add = prompt(\"\", \"\");\n    if (add === null) {\n      return;\n    }\n    users[usersIndex].push(add);\n    this.setState({\n      users,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <List\n          blocktext={users}\n          moveToNext={moveToNext}\n          moveToPrev={moveToPrev}\n          addItem={addItem}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}