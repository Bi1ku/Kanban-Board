{"ast":null,"code":"var _jsxFileName = \"/Users/owen/Random/react/Kanban-Board/src/App.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport List from \"./componets/List\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [users, setUsers] = useState([[\"foo\", \"1\"], [\"foo\", \"2\"], [\"foo\", \"3\"], [\"foo\", \"4\"]]);\n  let [update, setUpdate] = useState([]);\n  const [isTrue, setisTrue] = useState(true);\n\n  const moveToNext = (index, usersIndex) => {\n    update = users;\n    update[usersIndex + 1].push(update[usersIndex][index]);\n    update[usersIndex].splice(index, 1);\n    setUsers(update);\n  };\n\n  const moveToPrev = (index, usersIndex) => {\n    const user = users;\n    user[usersIndex - 1].push(user[usersIndex][index]);\n    user[usersIndex].splice(index, 1);\n  };\n\n  const addItem = usersIndex => {\n    const users = this.state.users;\n    const add = prompt(\"\", \"\");\n\n    if (add === null) {\n      return;\n    }\n\n    users[usersIndex].push(add);\n    this.setState({\n      users\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(List, {\n        users: users,\n        moveToNext: moveToNext,\n        moveToPrev: moveToPrev,\n        addItem: addItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"M079RdxYGq2+wck7dVdxk46Uz2Q=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/owen/Random/react/Kanban-Board/src/App.jsx"],"names":["React","useState","useEffect","List","App","users","setUsers","update","setUpdate","isTrue","setisTrue","moveToNext","index","usersIndex","push","splice","moveToPrev","user","addItem","state","add","prompt","setState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAO,WAAP;AAEA,OAAOC,IAAP,MAAiB,kBAAjB;;;AAEA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,CACjC,CAAC,KAAD,EAAQ,GAAR,CADiC,EAEjC,CAAC,KAAD,EAAQ,GAAR,CAFiC,EAGjC,CAAC,KAAD,EAAQ,GAAR,CAHiC,EAIjC,CAAC,KAAD,EAAQ,GAAR,CAJiC,CAAD,CAAlC;AAMA,MAAI,CAACM,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACQ,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMU,UAAU,GAAG,CAACC,KAAD,EAAQC,UAAR,KAAuB;AACxCN,IAAAA,MAAM,GAAGF,KAAT;AACAE,IAAAA,MAAM,CAACM,UAAU,GAAG,CAAd,CAAN,CAAuBC,IAAvB,CAA4BP,MAAM,CAACM,UAAD,CAAN,CAAmBD,KAAnB,CAA5B;AACAL,IAAAA,MAAM,CAACM,UAAD,CAAN,CAAmBE,MAAnB,CAA0BH,KAA1B,EAAiC,CAAjC;AACAN,IAAAA,QAAQ,CAACC,MAAD,CAAR;AACD,GALD;;AAOA,QAAMS,UAAU,GAAG,CAACJ,KAAD,EAAQC,UAAR,KAAuB;AACxC,UAAMI,IAAI,GAAGZ,KAAb;AACAY,IAAAA,IAAI,CAACJ,UAAU,GAAG,CAAd,CAAJ,CAAqBC,IAArB,CAA0BG,IAAI,CAACJ,UAAD,CAAJ,CAAiBD,KAAjB,CAA1B;AACAK,IAAAA,IAAI,CAACJ,UAAD,CAAJ,CAAiBE,MAAjB,CAAwBH,KAAxB,EAA+B,CAA/B;AACD,GAJD;;AAMA,QAAMM,OAAO,GAAIL,UAAD,IAAgB;AAC9B,UAAMR,KAAK,GAAG,KAAKc,KAAL,CAAWd,KAAzB;AACA,UAAMe,GAAG,GAAGC,MAAM,CAAC,EAAD,EAAK,EAAL,CAAlB;;AACA,QAAID,GAAG,KAAK,IAAZ,EAAkB;AAChB;AACD;;AACDf,IAAAA,KAAK,CAACQ,UAAD,CAAL,CAAkBC,IAAlB,CAAuBM,GAAvB;AACA,SAAKE,QAAL,CAAc;AACZjB,MAAAA;AADY,KAAd;AAGD,GAVD;;AAYA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,2BACE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,6BACE,QAAC,IAAD;AACE,QAAA,KAAK,EAAEA,KADT;AAEE,QAAA,UAAU,EAAEM,UAFd;AAGE,QAAA,UAAU,EAAEK,UAHd;AAIE,QAAA,OAAO,EAAEE;AAJX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CA/CD;;GAAMd,G;;KAAAA,G;AAiDN,eAAeA,GAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\n\nimport List from \"./componets/List\";\n\nconst App = () => {\n  const [users, setUsers] = useState([\n    [\"foo\", \"1\"],\n    [\"foo\", \"2\"],\n    [\"foo\", \"3\"],\n    [\"foo\", \"4\"],\n  ]);\n  let [update, setUpdate] = useState([]);\n  const [isTrue, setisTrue] = useState(true);\n\n  const moveToNext = (index, usersIndex) => {\n    update = users;\n    update[usersIndex + 1].push(update[usersIndex][index]);\n    update[usersIndex].splice(index, 1);\n    setUsers(update);\n  };\n\n  const moveToPrev = (index, usersIndex) => {\n    const user = users;\n    user[usersIndex - 1].push(user[usersIndex][index]);\n    user[usersIndex].splice(index, 1);\n  };\n\n  const addItem = (usersIndex) => {\n    const users = this.state.users;\n    const add = prompt(\"\", \"\");\n    if (add === null) {\n      return;\n    }\n    users[usersIndex].push(add);\n    this.setState({\n      users,\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"container\">\n        <List\n          users={users}\n          moveToNext={moveToNext}\n          moveToPrev={moveToPrev}\n          addItem={addItem}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}